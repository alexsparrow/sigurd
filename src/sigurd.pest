// Literals
// Boolean
_true  = { "true" }
_false = { "false" }
bool  = { _true | _false }

// Integers
digit = _{ '0'..'9' }
int   =  { digit ~ (digit | "_")* }

// Floating points
float = {
    int ~ "." ~ int? ~ exp? |
    int ~ exp
}

plus  = { "+" }
minus = { "-" }
exp   = { ^"e" ~ (plus | minus)? ~ int }

// Strings
string = { "\"" ~ (raw_string | escape)* ~ "\"" }
raw_string = { (!("\\" | "\"") ~ ANY)+ }
hex = _{ '0'..'9' | 'a'..'f' | 'A'..'F' }
unicode_hex = { hex{1, 6} }
predefined = { "n" | "r" | "t" | "\\" | "0" | "\"" | "'" }
byte       = { "x" ~ hex{2} }
unicode    = { "u" ~ "{" ~ unicode_hex ~ "}" }
escape     = { "\\" ~ (predefined | byte | unicode) }

literal = _{ bool | float | int | string }

// Identifiers
ident_char = _{ 'a'..'z' | 'A'..'Z' | '0'..'9' | "_" }
ident      =  {
    ('a'..'z' | 'A'..'Z') ~ ident_char* |
    "_" ~ ident_char+
}

// Expressions
operation = _{ add | subtract | multiply | divide | power }
    add      = { "+" }
    subtract = { "-" }
    multiply = { "*" }
    divide   = { "/" }
    power    = { "^" }

basic_expr = _{ literal | ident }

operator_expr = { term ~ (operation ~ term)* }
term = _{ basic_expr | "(" ~ operator_expr ~ ")" }

expr = _{ operator_expr | basic_expr }


WHITESPACE = _{ " " | "\t" }



